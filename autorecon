#!/bin/bash


recon () {
	if [ ! -d $1 ]; then
		mkdir $1
		cd $1
		if [ ! -d "scans" ]; then
			mkdir scans
		fi


		pwd=$(pwd)
		sleep 2

		echo "Gathering information from amass..."
		amass enum -d $1 -o amass.txt > /dev/null 2>&1
		sleep 5

		echo "Gathering information from crtsh..."
		crtsh -d $1 >> crtsh.txt
		sleep 5

		echo "Gathering information from assetfinder..."
		assetfinder --subs-only $1 >> assetfinder.txt
		sleep 5

		echo "Gathering information from sublist3r..."
		sublist3r -d $1 -o sublister.txt > /dev/null 2>&1
		sleep 5

		echo "Gathering information form findomain..."
		findomain-linux -t $1 -u findomain.txt > /dev/null 2>&1
		sleep 5

		echo "Combining results..."
		cat amass.txt assetfinder.txt crtsh.txt findomain.txt sublister.txt >> SUBDOMAINS.txt
		sleep 5

		echo "Removing duplicates..."
		cat SUBDOMAINS.txt | sort -u > subdomains-UNIQUE.txt
		sleep 5

		echo "Checking alive targets..."
		cat subdomains-UNIQUE.txt | httprobe -c 100 | sed 's/https\?:\/\///' > ALIVE.txt
		sleep 5

		echo  "Scanning for open ports..."
		nmap -iL ALIVE.txt -T5 -oA scans/scanned.txt > /dev/null 2>&1
		sleep 5

		echo "Taking screenshots..."
		eyewitness -f $pwd/ALIVE.txt -d screenshots --no-prompt > /dev/null 2>&1
		cd ..
	fi

}


subdomain_combiner(){
	#collects all alive subdomains and combine it into a single file
	pwd=$(pwd)
	arr=()
	while IFS= read -r line; do
	arr+=("$line")
	done < <(find $pwd -type f -name "ALIVE.txt")

	cd ..
	pwd=$(pwd)
	for i in "${arr[@]}"
	do
		cat $i >> $pwd/all-subdomains.txt
	done
}



auto_recon(){
# Color variables
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'
clr='\033[0m'

if [ ! -f $1 ];then
		echo "Please provide a text file containing assets to scan..!"
		echo "Example: autorecon.sh assets.txt"
else
		pwd=$(pwd)

		arr=()
		while IFS= read -r line; do
		arr+=("$line")
		done <$pwd/$1

		if [ ! -d root_domains ]; then
				mkdir root_domains
				cd root_domains
		else
				cd root_domains
		fi

		indexes=( "${!arr[@]}" )
		lastindex=${indexes[-1]}
		lastindex=`expr $lastindex +  1`
		count=1

		for i in "${arr[@]}"
		do
			if [ ! -d $i ]; then
				
				echo " "
				echo -e "${cyan}Scanning $i ${blue}       [ $count/$lastindex ] ${clr}"
				start_time=$(date +%s)
				recon "$i"
				end_time=$(date +%s)
				echo -e "${red}$i completed in $(($end_time-$start_time)) seconds..!${clr}"
				if [ $count -eq $lastindex ];then
					subdomain_combiner
					echo -e "\n${yellow}Hurray!!! Completed reconnaissance. Check $pwd/all-subdomains.txt for combined list of subdomains.${clr}"
				fi
			fi
			count=`expr $count + 1`
		done
	fi
}





check_alive(){
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'
clr='\033[0m'

if [ ! -f $1 ];then
		echo "Please provide a text file containing assets to scan..!"
		echo "Example: autorecon.sh assets.txt"
else
		pwd=$(pwd)
		arr=()
		while IFS= read -r line; do
		arr+=("$line")
		done <$pwd/$1	

		indexes=( "${!arr[@]}" )
		lastindex=${indexes[-1]}
		lastindex=`expr $lastindex +  1`
		count=1
		
		for i in "${arr[@]}"
			do
				filepath=$(find / -type d -name $i 2>/dev/null | head -n 1)
				if [ -z "$filepath" ]; then
					echo "Subdomain haven't recon yet. Please recon it before checking for new alive targets..!"
				else
					echo " "
					echo -e "${cyan}Scanning $i ${blue}       [ $count/$lastindex ] ${clr}"
					start_time=$(date +%s)
					
					cd $filepath
					if [ -d current_alive ]; then
						rm -rf current_alive
					fi
					mkdir current_alive
					cd current_alive
					echo "Checking for new alive targets..."
					recon "$i" > /dev/null 2>&1

					diff -u $filepath/ALIVE.txt $filepath/current_alive/$i/ALIVE.txt | sed -n '/^+[^+]/ s/^+//p' > new_alive_targets.txt
					rm -rf $i 

					end_time=$(date +%s)
					echo -e "${red}$i completed in $(($end_time-$start_time)) seconds..!${clr}"
					if [ $count -eq $lastindex ];then
						echo -e "\n${yellow}Hurray!!! Completed recon. ${clr}"
						echo -e "New targets are saved into new_alive_targets.txt under current_alive directory of the subdomain directory"
					fi
				fi
				count=`expr $count + 1`
			done
fi
}



while getopts r:a: flag
do
    case "${flag}" in
        r) textfile=${OPTARG}
		auto_recon $textfile 
		;;

        a) textfile=${OPTARG}
		check_alive $textfile 
		;;

		*) 
		echo "Please specify an argument"
		;;
    esac
done




